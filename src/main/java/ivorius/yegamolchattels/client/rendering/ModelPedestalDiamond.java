/***************************************************************************************************
 * Copyright (c) 2014, Lukas Tenbrink.
 * http://lukas.axxim.net
 **************************************************************************************************/

// Date: 17-11-2013 15:46:25
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX

package ivorius.yegamolchattels.client.rendering;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;
import net.minecraft.util.MathHelper;

public class ModelPedestalDiamond extends ModelBase
{
    //fields
    ModelRenderer base;
    ModelRenderer midbase;
    ModelRenderer lpillar1;
    ModelRenderer lpillar2;
    ModelRenderer lpillar3;
    ModelRenderer lpillar4;
    ModelRenderer spillar1;
    ModelRenderer spillar2;
    ModelRenderer spillar3;
    ModelRenderer spillar4;
    ModelRenderer fcollum1;
    ModelRenderer fcollum2;
    ModelRenderer fcollum3;
    ModelRenderer fcollum4;

    public ModelPedestalDiamond()
    {
        textureWidth = 64;
        textureHeight = 64;

        base = new ModelRenderer(this, 0, 0);
        base.addBox(-6F, 20F, -6F, 12, 3, 12);
        base.setRotationPoint(0F, 1F, 0F);
        base.setTextureSize(64, 64);
        base.mirror = true;
        setRotation(base, 0F, 0F, 0F);
        midbase = new ModelRenderer(this, 0, 16);
        midbase.addBox(-2F, 0F, -2F, 4, 20, 4);
        midbase.setRotationPoint(0F, 1F, 0F);
        midbase.setTextureSize(64, 64);
        midbase.mirror = true;
        setRotation(midbase, 0F, 0F, 0F);
        lpillar1 = new ModelRenderer(this, 0, 41);
        lpillar1.addBox(1F, 5F, 1F, 2, 15, 2);
        lpillar1.setRotationPoint(0F, 1F, 0F);
        lpillar1.setTextureSize(64, 64);
        lpillar1.mirror = true;
        setRotation(lpillar1, 0F, 0F, 0F);
        lpillar2 = new ModelRenderer(this, 9, 41);
        lpillar2.addBox(1F, 5F, -3F, 2, 15, 2);
        lpillar2.setRotationPoint(0F, 1F, 0F);
        lpillar2.setTextureSize(64, 64);
        lpillar2.mirror = true;
        setRotation(lpillar2, 0F, 0F, 0F);
        lpillar3 = new ModelRenderer(this, 18, 41);
        lpillar3.addBox(-3F, 5F, 1F, 2, 15, 2);
        lpillar3.setRotationPoint(0F, 1F, 0F);
        lpillar3.setTextureSize(64, 64);
        lpillar3.mirror = true;
        setRotation(lpillar3, 0F, 0F, 0F);
        lpillar4 = new ModelRenderer(this, 27, 41);
        lpillar4.addBox(-3F, 5F, -3F, 2, 15, 2);
        lpillar4.setRotationPoint(0F, 1F, 0F);
        lpillar4.setTextureSize(64, 64);
        lpillar4.mirror = true;
        setRotation(lpillar4, 0F, 0F, 0F);
        spillar1 = new ModelRenderer(this, 36, 36);
        spillar1.addBox(2F, 10F, 2F, 2, 10, 2);
        spillar1.setRotationPoint(0F, 1F, 0F);
        spillar1.setTextureSize(64, 64);
        spillar1.mirror = true;
        setRotation(spillar1, 0F, 0F, 0F);
        spillar2 = new ModelRenderer(this, 45, 36);
        spillar2.addBox(2F, 10F, -4F, 2, 10, 2);
        spillar2.setRotationPoint(0F, 1F, 0F);
        spillar2.setTextureSize(64, 64);
        spillar2.mirror = true;
        setRotation(spillar2, 0F, 0F, 0F);
        spillar3 = new ModelRenderer(this, 36, 49);
        spillar3.addBox(-4.333333F, 10F, -4F, 2, 10, 2);
        spillar3.setRotationPoint(0F, 1F, 0F);
        spillar3.setTextureSize(64, 64);
        spillar3.mirror = true;
        setRotation(spillar3, 0F, 0F, 0F);
        spillar4 = new ModelRenderer(this, 45, 49);
        spillar4.addBox(-4F, 10F, 2F, 2, 10, 2);
        spillar4.setRotationPoint(0F, 1F, 0F);
        spillar4.setTextureSize(64, 64);
        spillar4.mirror = true;
        setRotation(spillar4, 0F, 0F, 0F);
        fcollum1 = new ModelRenderer(this, 17, 16);
        fcollum1.addBox(-1F, -4F, -1F, 2, 10, 2);
        fcollum1.setRotationPoint(-6F, 12F, 0F);
        fcollum1.setTextureSize(64, 64);
        fcollum1.mirror = true;
        setRotation(fcollum1, 0F, -0.7853982F, 0F);
        fcollum2 = new ModelRenderer(this, 26, 16);
        fcollum2.addBox(-1F, -4F, -1F, 2, 10, 2);
        fcollum2.setRotationPoint(0F, 12F, 6F);
        fcollum2.setTextureSize(64, 64);
        fcollum2.mirror = true;
        setRotation(fcollum2, 0F, -0.7853982F, 0F);
        fcollum3 = new ModelRenderer(this, 35, 16);
        fcollum3.addBox(-1F, -4F, -1F, 2, 10, 2);
        fcollum3.setRotationPoint(6F, 12F, 0F);
        fcollum3.setTextureSize(64, 64);
        fcollum3.mirror = true;
        setRotation(fcollum3, 0F, -0.7853982F, 0F);
        fcollum4 = new ModelRenderer(this, 44, 16);
        fcollum4.addBox(-1F, -4F, -1F, 2, 10, 2);
        fcollum4.setRotationPoint(0F, 12F, -6F);
        fcollum4.setTextureSize(64, 64);
        fcollum4.mirror = true;
        setRotation(fcollum4, 0F, -0.7853982F, 0F);
    }

    @Override
    public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5)
    {
        super.render(entity, f, f1, f2, f3, f4, f5);
        setRotationAngles(f, f1, f2, f3, f4, f5, entity);
        base.render(f5);
        midbase.render(f5);
        lpillar1.render(f5);
        lpillar2.render(f5);
        lpillar3.render(f5);
        lpillar4.render(f5);
        spillar1.render(f5);
        spillar2.render(f5);
        spillar3.render(f5);
        spillar4.render(f5);
        fcollum1.render(f5);
        fcollum2.render(f5);
        fcollum3.render(f5);
        fcollum4.render(f5);
    }

    private void setRotation(ModelRenderer model, float x, float y, float z)
    {
        model.rotateAngleX = x;
        model.rotateAngleY = y;
        model.rotateAngleZ = z;
    }

    @Override
    public void setRotationAngles(float par1, float par2, float par3, float par4, float par5, float par6, Entity par7Entity)
    {
        super.setRotationAngles(par1, par2, par3, par4, par5, par6, par7Entity);

        float timeMov = par7Entity.rotationYaw * 0.025f;
        float timeRot = par7Entity.rotationYaw * 0.0015f;
        fcollum1.rotationPointY = 12.0f + MathHelper.sin(timeMov) * 2.0f;
        fcollum2.rotationPointY = 12.0f + MathHelper.cos(timeMov) * 2.0f;
        fcollum3.rotationPointY = 12.0f - MathHelper.sin(timeMov) * 2.0f;
        fcollum4.rotationPointY = 12.0f - MathHelper.cos(timeMov) * 2.0f;
        fcollum1.rotateAngleY = MathHelper.sin(timeRot) * 2.0f;
        fcollum2.rotateAngleY = MathHelper.cos(timeRot) * 2.0f;
        fcollum3.rotateAngleY = -MathHelper.sin(timeRot) * 2.0f;
        fcollum4.rotateAngleY = -MathHelper.cos(timeRot) * 2.0f;
    }
}
