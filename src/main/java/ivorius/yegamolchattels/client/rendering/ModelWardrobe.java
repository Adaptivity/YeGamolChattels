/***************************************************************************************************
 * Copyright (c) 2014, Lukas Tenbrink.
 * http://lukas.axxim.net
 **************************************************************************************************/

// Date: 29-1-2014 18:13:04
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX

package ivorius.yegamolchattels.client.rendering;

import ivorius.yegamolchattels.blocks.EntityShelfInfo;
import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;

public class ModelWardrobe extends ModelBase
{
    //fields
    ModelRenderer base1;
    ModelRenderer right;
    ModelRenderer left;
    ModelRenderer base2;
    ModelRenderer back;
    ModelRenderer top;
    ModelRenderer drawer1;
    ModelRenderer drawer2;
    ModelRenderer railingoflove;
    ModelRenderer rightdoor;
    ModelRenderer leftdoor;

    public ModelWardrobe()
    {
        textureWidth = 128;
        textureHeight = 64;

        base1 = new ModelRenderer(this, 0, 0);
        base1.addBox(-6F, 0F, -2F, 12, 2, 8);
        base1.setRotationPoint(0F, 20F, 0F);
        base1.setTextureSize(128, 64);
        base1.mirror = true;
        setRotation(base1, 0F, 0F, 0F);
        right = new ModelRenderer(this, 0, 12);
        right.addBox(-8F, -8F, -2F, 2, 32, 10);
        right.setRotationPoint(0F, 0F, 0F);
        right.setTextureSize(128, 64);
        right.mirror = true;
        setRotation(right, 0F, 0F, 0F);
        left = new ModelRenderer(this, 25, 12);
        left.addBox(6F, -8F, -2F, 2, 32, 10);
        left.setRotationPoint(0F, 0F, 0F);
        left.setTextureSize(128, 64);
        left.mirror = true;
        setRotation(left, 0F, 0F, 0F);
        base2 = new ModelRenderer(this, 41, 0);
        base2.addBox(-6F, 0F, -2F, 12, 2, 8);
        base2.setRotationPoint(0F, 12F, 0F);
        base2.setTextureSize(128, 64);
        base2.mirror = true;
        setRotation(base2, 0F, 0F, 0F);
        back = new ModelRenderer(this, 50, 12);
        back.addBox(-6F, 0F, 6F, 12, 30, 2);
        back.setRotationPoint(0F, -8F, 0F);
        back.setTextureSize(128, 64);
        back.mirror = true;
        setRotation(back, 0F, 0F, 0F);
        top = new ModelRenderer(this, 82, 0);
        top.addBox(-6F, 0F, -2F, 12, 2, 8);
        top.setRotationPoint(0F, -8F, 0F);
        top.setTextureSize(128, 64);
        top.mirror = true;
        setRotation(top, 0F, 0F, 0F);
        drawer1 = new ModelRenderer(this, 79, 12);
        drawer1.addBox(-6F, 0F, -2F, 12, 3, 8);
        drawer1.setRotationPoint(0F, 14F, 0F);
        drawer1.setTextureSize(128, 64);
        drawer1.mirror = true;
        setRotation(drawer1, 0F, 0F, 0F);
        drawer2 = new ModelRenderer(this, 79, 24);
        drawer2.addBox(-6F, 0F, -2F, 12, 3, 8);
        drawer2.setRotationPoint(0F, 17F, 0F);
        drawer2.setTextureSize(128, 64);
        drawer2.mirror = true;
        setRotation(drawer2, 0F, 0F, 0F);
        railingoflove = new ModelRenderer(this, 0, 55);
        railingoflove.addBox(-6F, -1F, -1F, 12, 2, 2);
        railingoflove.setRotationPoint(0F, -4F, 2F);
        railingoflove.setTextureSize(128, 64);
        railingoflove.mirror = true;
        setRotation(railingoflove, 0F, 0F, 0F);
        rightdoor = new ModelRenderer(this, 79, 36);
        rightdoor.addBox(0F, -6F, 0F, 6, 18, 2);
        rightdoor.setRotationPoint(-6F, 0F, -2F);
        rightdoor.setTextureSize(128, 64);
        rightdoor.mirror = true;
        setRotation(rightdoor, 0F, 0F, 0F);
        leftdoor = new ModelRenderer(this, 96, 36);
        leftdoor.addBox(-6F, -6F, 0F, 6, 18, 2);
        leftdoor.setRotationPoint(6F, 0F, -2F);
        leftdoor.setTextureSize(128, 64);
        leftdoor.mirror = true;
        setRotation(leftdoor, 0F, 0F, 0F);
    }

    @Override
    public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5)
    {
        super.render(entity, f, f1, f2, f3, f4, f5);
        setRotationAngles(f, f1, f2, f3, f4, f5, entity);
        base1.render(f5);
        right.render(f5);
        left.render(f5);
        base2.render(f5);
        back.render(f5);
        top.render(f5);
        drawer1.render(f5);
        drawer2.render(f5);
        railingoflove.render(f5);
        rightdoor.render(f5);
        leftdoor.render(f5);
    }

    @Override
    public void setRotationAngles(float par1, float par2, float par3, float par4, float par5, float par6, Entity par7Entity)
    {
        super.setRotationAngles(par1, par2, par3, par4, par5, par6, par7Entity);

        float[] shelfTriggerVals = ((EntityShelfInfo) par7Entity).triggerVals;

        leftdoor.rotateAngleY = -shelfTriggerVals[0] * 3.1415926f * 0.64f;
        rightdoor.rotateAngleY = shelfTriggerVals[0] * 3.1415926f * 0.64f;

        drawer1.setRotationPoint(-0.001F, 14F - 0.001f, -shelfTriggerVals[1] * 6.0f);
        drawer2.setRotationPoint(0.001F, 17F - 0.001f, -shelfTriggerVals[2] * 6.0f);
    }

    private void setRotation(ModelRenderer model, float x, float y, float z)
    {
        model.rotateAngleX = x;
        model.rotateAngleY = y;
        model.rotateAngleZ = z;
    }
}
