/*
 *  Copyright (c) 2014, Lukas Tenbrink.
 *  * http://lukas.axxim.net
 */

// Date: 24-9-2014 17:01:47
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX


package ivorius.yegamolchattels.client.rendering;

import ivorius.ivtoolkit.items.IvItemRendererModel;
import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;
import net.minecraft.item.ItemStack;

public class ModelSawBench extends ModelBase implements IvItemRendererModel.ItemModelRenderer
{
    //fields
    ModelRenderer beam1;
    ModelRenderer beam2;
    ModelRenderer beam3;
    ModelRenderer notbeam3;
    ModelRenderer tabletop1;
    ModelRenderer frontplank;
    ModelRenderer beam5;
    ModelRenderer beam6;
    ModelRenderer beam7;
    ModelRenderer holderplank;
    ModelRenderer retractorleft;
    ModelRenderer tabletop2;
    ModelRenderer tabletop3;
    ModelRenderer retractorright;
    ModelRenderer leverleft;
    ModelRenderer leverright;
    ModelRenderer floordeco;

    public ModelSawBench()
    {
        textureWidth = 256;
        textureHeight = 128;

        beam1 = new ModelRenderer(this, 0, 0);
        beam1.addBox(-2F, -2F, -2F, 3, 13, 3);
        beam1.setRotationPoint(-5F, 13F, -11F);
        beam1.setTextureSize(256, 128);
        beam1.mirror = true;
        setRotation(beam1, -0.0743572F, 0F, 0F);
        beam2 = new ModelRenderer(this, 0, 17);
        beam2.addBox(-2F, -2F, -1F, 3, 13, 3);
        beam2.setRotationPoint(-5F, 13F, 3F);
        beam2.setTextureSize(256, 128);
        beam2.mirror = true;
        setRotation(beam2, 0.0743572F, 0F, 0F);
        beam3 = new ModelRenderer(this, 0, 34);
        beam3.addBox(-1F, -1F, -1F, 3, 13, 3);
        beam3.setRotationPoint(2F, 12F, 3F);
        beam3.setTextureSize(256, 128);
        beam3.mirror = true;
        setRotation(beam3, 0.0743572F, 0F, 0F);
        notbeam3 = new ModelRenderer(this, 0, 51);
        notbeam3.addBox(-1F, -2F, -2F, 3, 13, 3);
        notbeam3.setRotationPoint(2F, 13F, -11F);
        notbeam3.setTextureSize(256, 128);
        notbeam3.mirror = true;
        setRotation(notbeam3, -0.0743572F, 0F, 0F);
        tabletop1 = new ModelRenderer(this, 0, 70);
        tabletop1.addBox(-7F, 0F, -9F, 13, 2, 18);
        tabletop1.setRotationPoint(-1F, 9F, -4F);
        tabletop1.setTextureSize(256, 128);
        tabletop1.mirror = true;
        setRotation(tabletop1, 0F, 0F, 0F);
        frontplank = new ModelRenderer(this, 14, 41);
        frontplank.addBox(0F, 0F, -10F, 2, 6, 20);
        frontplank.setRotationPoint(3F, 14F, -4F);
        frontplank.setTextureSize(256, 128);
        frontplank.mirror = true;
        setRotation(frontplank, 0F, 0F, 0F);
        beam5 = new ModelRenderer(this, 14, 41);
        beam5.addBox(0F, -3F, -1F, 5, 3, 2);
        beam5.setRotationPoint(-4F, 20F, -12F);
        beam5.setTextureSize(256, 128);
        beam5.mirror = true;
        setRotation(beam5, 0F, 0F, 0F);
        beam6 = new ModelRenderer(this, 14, 48);
        beam6.addBox(0F, -3F, 0F, 5, 3, 2);
        beam6.setRotationPoint(-4F, 20F, 3F);
        beam6.setTextureSize(256, 128);
        beam6.mirror = true;
        setRotation(beam6, 0F, 0F, 0F);
        beam7 = new ModelRenderer(this, 41, 41);
        beam7.addBox(0.5F, 0F, -7F, 2, 3, 14);
        beam7.setRotationPoint(-7F, 17F, -4F);
        beam7.setTextureSize(256, 128);
        beam7.mirror = true;
        setRotation(beam7, 0F, 0F, 0F);
        holderplank = new ModelRenderer(this, 134, 92);
        holderplank.addBox(0F, 0F, -12F, 2, 4, 24);
        holderplank.setRotationPoint(21F, 8F, -4F);
        holderplank.setTextureSize(256, 128);
        holderplank.mirror = true;
        setRotation(holderplank, 0F, 0F, 0F);
        retractorleft = new ModelRenderer(this, 134, 86);
        retractorleft.addBox(0F, -1F, -1F, 21, 2, 2);
        retractorleft.setRotationPoint(3F, 10F, 6F);
        retractorleft.setTextureSize(256, 128);
        retractorleft.mirror = true;
        setRotation(retractorleft, 0F, 0F, 0F);
        tabletop2 = new ModelRenderer(this, 0, 92);
        tabletop2.addBox(-7F, -1F, -10F, 13, 1, 20);
        tabletop2.setRotationPoint(-1F, 9F, -4F);
        tabletop2.setTextureSize(256, 128);
        tabletop2.mirror = true;
        setRotation(tabletop2, 0F, 0F, 0F);
        tabletop3 = new ModelRenderer(this, 67, 92);
        tabletop3.addBox(-7F, -1F, -10F, 13, 1, 20);
        tabletop3.setRotationPoint(-1F, 12F, -4F);
        tabletop3.setTextureSize(256, 128);
        tabletop3.mirror = true;
        setRotation(tabletop3, 0F, 0F, 0F);
        retractorright = new ModelRenderer(this, 134, 80);
        retractorright.addBox(0F, -1F, -1F, 21, 2, 2);
        retractorright.setRotationPoint(3F, 10F, -14F);
        retractorright.setTextureSize(256, 128);
        retractorright.mirror = true;
        setRotation(retractorright, 0F, 0F, 0F);
        leverleft = new ModelRenderer(this, 134, 68);
        leverleft.addBox(-0.5F, -4F, -1F, 0, 8, 2);
        leverleft.setRotationPoint(24F, 10F, 6F);
        leverleft.setTextureSize(256, 128);
        leverleft.mirror = true;
        setRotation(leverleft, 0F, 0F, 0F);
        leverright = new ModelRenderer(this, 140, 68);
        leverright.addBox(-0.5F, -4F, -1F, 0, 8, 2);
        leverright.setRotationPoint(24F, 10F, -14F);
        leverright.setTextureSize(256, 128);
        leverright.mirror = true;
        setRotation(leverright, 0F, 0F, 0F);
        floordeco = new ModelRenderer(this, 100, 0);
        floordeco.addBox(-16F, -0.1F, -16F, 32, 0, 32);
        floordeco.setRotationPoint(8F, 24F, -8F);
        floordeco.setTextureSize(256, 128);
        floordeco.mirror = true;
        setRotation(floordeco, 0F, 0F, 0F);
    }

    public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5)
    {
        super.render(entity, f, f1, f2, f3, f4, f5);
        setRotationAngles(f, f1, f2, f3, f4, f5, entity);
        beam1.render(f5);
        beam2.render(f5);
        beam3.render(f5);
        notbeam3.render(f5);
        tabletop1.render(f5);
        frontplank.render(f5);
        beam5.render(f5);
        beam6.render(f5);
        beam7.render(f5);
        holderplank.render(f5);
        retractorleft.render(f5);
        tabletop2.render(f5);
        tabletop3.render(f5);
        retractorright.render(f5);
        leverleft.render(f5);
        leverright.render(f5);
        floordeco.render(f5);
    }

    private void setRotation(ModelRenderer model, float x, float y, float z)
    {
        model.rotateAngleX = x;
        model.rotateAngleY = y;
        model.rotateAngleZ = z;
    }

    @Override
    public void render(ItemStack itemStack)
    {
        float pixelRatio = 0.0625F;
        render(null, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, pixelRatio);
    }
}
