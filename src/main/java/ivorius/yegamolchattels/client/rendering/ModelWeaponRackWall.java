/***************************************************************************************************
 * Copyright (c) 2014, Lukas Tenbrink.
 * http://lukas.axxim.net
 **************************************************************************************************/

// Date: 29-3-2013 20:45:08
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX

package ivorius.yegamolchattels.client.rendering;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;

public class ModelWeaponRackWall extends ModelBase
{
    //fields
    ModelRenderer base;
    ModelRenderer right;
    ModelRenderer left;
    ModelRenderer base2;
    ModelRenderer bottom;
    ModelRenderer top;
    ModelRenderer base3;
    ModelRenderer base4;
    ModelRenderer bottomleft;
    ModelRenderer bottomright;
    ModelRenderer topleft;
    ModelRenderer topright;

    public ModelWeaponRackWall()
    {
        textureWidth = 64;
        textureHeight = 32;

        base = new ModelRenderer(this, 18, 16);
        base.addBox(-4F, 1F, 0F, 8, 3, 1);
        base.setRotationPoint(0F, 16F, 7F);
        base.setTextureSize(64, 32);
        base.mirror = true;
        setRotation(base, 0F, 0F, 0F);
        right = new ModelRenderer(this, 0, 10);
        right.addBox(-6F, -8F, -1F, 2, 16, 2);
        right.setRotationPoint(0F, 16F, 7F);
        right.setTextureSize(64, 32);
        right.mirror = true;
        setRotation(right, 0F, 0F, 0F);
        left = new ModelRenderer(this, 9, 10);
        left.addBox(4F, -8F, -1F, 2, 16, 2);
        left.setRotationPoint(0F, 16F, 7F);
        left.setTextureSize(64, 32);
        left.mirror = true;
        setRotation(left, 0F, 0F, 0F);
        base2 = new ModelRenderer(this, 18, 10);
        base2.addBox(-2F, 4F, 0F, 4, 1, 1);
        base2.setRotationPoint(0F, 16F, 7F);
        base2.setTextureSize(64, 32);
        base2.mirror = true;
        setRotation(base2, 0F, 0F, 0F);
        bottom = new ModelRenderer(this, 0, 0);
        bottom.addBox(-7F, 6F, -3F, 14, 1, 3);
        bottom.setRotationPoint(0F, 16F, 7F);
        bottom.setTextureSize(64, 32);
        bottom.mirror = true;
        setRotation(bottom, 0F, 0F, 0F);
        top = new ModelRenderer(this, 0, 5);
        top.addBox(-7F, -2F, -3F, 14, 1, 3);
        top.setRotationPoint(0F, 16F, 7F);
        top.setTextureSize(64, 32);
        top.mirror = true;
        setRotation(top, 0F, 0F, 0F);
        base3 = new ModelRenderer(this, 18, 13);
        base3.addBox(2F, 0F, 0F, 2, 1, 1);
        base3.setRotationPoint(0F, 16F, 7F);
        base3.setTextureSize(64, 32);
        base3.mirror = true;
        setRotation(base3, 0F, 0F, 0F);
        base4 = new ModelRenderer(this, 25, 13);
        base4.addBox(-4F, 0F, 0F, 2, 1, 1);
        base4.setRotationPoint(0F, 16F, 7F);
        base4.setTextureSize(64, 32);
        base4.mirror = true;
        setRotation(base4, 0F, 0F, 0F);
        bottomleft = new ModelRenderer(this, 35, 0);
        bottomleft.addBox(4F, 5F, -3F, 2, 1, 1);
        bottomleft.setRotationPoint(0F, 16F, 7F);
        bottomleft.setTextureSize(64, 32);
        bottomleft.mirror = true;
        setRotation(bottomleft, 0F, 0F, 0F);
        bottomright = new ModelRenderer(this, 35, 3);
        bottomright.addBox(-6F, 5F, -3F, 2, 1, 1);
        bottomright.setRotationPoint(0F, 16F, 7F);
        bottomright.setTextureSize(64, 32);
        bottomright.mirror = true;
        setRotation(bottomright, 0F, 0F, 0F);
        topleft = new ModelRenderer(this, 35, 6);
        topleft.addBox(4F, -3F, -3F, 2, 1, 1);
        topleft.setRotationPoint(0F, 16F, 7F);
        topleft.setTextureSize(64, 32);
        topleft.mirror = true;
        setRotation(topleft, 0F, 0F, 0F);
        topright = new ModelRenderer(this, 35, 9);
        topright.addBox(-6F, -3F, -3F, 2, 1, 1);
        topright.setRotationPoint(0F, 16F, 7F);
        topright.setTextureSize(64, 32);
        topright.mirror = true;
        setRotation(topright, 0F, 0F, 0F);
    }

    @Override
    public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5)
    {
        super.render(entity, f, f1, f2, f3, f4, f5);
        setRotationAngles(f, f1, f2, f3, f4, f5, entity);
        base.render(f5);
        right.render(f5);
        left.render(f5);
        base2.render(f5);
        bottom.render(f5);
        top.render(f5);
        base3.render(f5);
        base4.render(f5);
        bottomleft.render(f5);
        bottomright.render(f5);
        topleft.render(f5);
        topright.render(f5);
    }

    private void setRotation(ModelRenderer model, float x, float y, float z)
    {
        model.rotateAngleX = x;
        model.rotateAngleY = y;
        model.rotateAngleZ = z;
    }
}
